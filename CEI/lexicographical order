Write a program to generate all non-empty subsets of an array in lexicographical order. A sequence a1, a2, a3, .., an is lexicographically smaller than sequence b1, b2, b3, .., bn if a[j] < b[j], 1 <= j <= n and a[i] = b[i] for all 1 <= i < j.



Input

First line contains a single integer N - the size of the array.

Next line contains N integers a1,a2,a3 .., an - elements of the array.



Constraints

1 <= N <= 15

1 <= A[i] = 100



Output

Print 2^N - 1 lines. Each line should contain a valid non-empty subset of the original array and output should be sorted lexicographically.



Sample Input

3

1 2 3



Sample Output

1

1 2

1 2 3

1 3

2

2 3

3



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++




import java.util.*;
class Main
{
static int n;
static int[] a;
  public static void main(String args[])
  {
    Scanner sc = new Scanner(System.in);
    n = sc.nextInt();
    a = new int[n];
    for(int i =0;i<n;i++)
	{
       a[i] = sc.nextInt();
	}
    Arrays.sort(a);
    generate(0, new int[n], 0);
  }
 public static void generate(int index, int[] cur, int cursize)
 {
   if(cursize > 0)
   {
      for(int i =0;i<cursize;i++)
	  {
        System.out.print(cur[i]) + " ";
	  }
      System.out.println();
   }
   for(int i = index;i<n;i++)
   {
    cur[cursize] = a[i];
    generate(i+1,cur,cursize + 1);
   }
 }
}
