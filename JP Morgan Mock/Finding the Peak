Finding the Peak



A peak element in an array is the one that is not smaller than its neighbours. Given an array arr[] of size N, find the index of its first peak element.



Input Format:

First line contains a positive integer N which depicts size of array arr[].

Second line contains N space-separated integers, the elements of arr[].



Output Format:

Print the index of the first peak element.





Example 1:

Input:

3

1 2 3

Output:

2

Explanation: index 2 i.e element 3 is the peak element as it is greater than its neighbour 2.



Example 2:

Input:

2

3 4

Output:

1

Explanation: 4 (at index 1) is the peak element as it is greater than its only neighbour element 3.

 

Constraints:

1 ≤ N ≤ 105

1 ≤ A[] ≤ 106



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

import java.util.*;
public class Main 
{
    public static void main(String[] args) 
	{
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) 
		{
            a[i] = sc.nextInt();
        }
        System.out.println(peak(a));
    }
    public static int peak(int[] a) 
	{
        int n = a.length;
        if (n == 1) 
		{
            return 0;
        }
        if (a[0] >= a[1]) 
		{
            return 0;
        }
        if (a[n - 1] >= a[n - 2]) 
		{
            return n - 1;
        }
        for (int i = 1; i < n - 1; i++) 
		{
            if (a[i] >= a[i - 1] && a[i] >= a[i + 1]) 
			{
                return i;
            }
        }
        return -1;
    }
}
